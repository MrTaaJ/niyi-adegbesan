@use '../../scss/global/colors' as colors;
@use '../../scss/utils/functions' as fn;
@import '../../scss/utils/mixins';
@import '../../scss/utils/breakpoints';

.lightText {
  color: colors.$text-light;
}

.darkText {
  color: colors.$text-dark;
}

.projectHeroContainer {
  margin-block-end: fn.rem(60);
  .projectHeroTitle {
    font-family: 'Lora';
    font-size: clamp(fn.rem(24), fn.rem(16) + 3vw, fn.rem(48));
    font-weight: 700;
    line-height: clamp(fn.rem(29), fn.rem(16) + 3vw, fn.rem(81));
  }

  .projectHeroDescription {
    font-size: fn.rem(14);
    font-weight: 400;
    line-height: fn.rem(18);

    @include breakpoint-up(md) {
      display: none;
    }
  }

  .projectImageContainer {
    width: 100%;
    margin-block-start: fn.rem(30);

    @include breakpoint-up(md) {
      display: none;
    }

    img {
      width: 100%;
      background-position: center center;
      background-size: cover;
      background-repeat: no-repeat;
    }
  }

  .projectListContainer {
    @include flex_centered;
    gap: fn.rem(15);
    margin-block-start: fn.rem(30);

    @include breakpoint-up(md) {
      gap: fn.rem(40);
    }
    .projectList {
      @include flex_centered;
      gap: fn.rem(8);
      .projectListDot {
        width: fn.rem(8);
        height: fn.rem(8);
        border-radius: 50%;
        opacity: 0.6;
      }

      .lightDot {
        background-color: colors.$text-light;
      }

      .darkDot {
        background-color: colors.$text-dark;
      }

      .listId,
      .listTitle {
        font-size: clamp(fn.rem(12), fn.rem(10) + 1vw, fn.rem(16));
        line-height: clamp(fn.rem(18), fn.rem(12) + 1vw, fn.rem(24));
      }

      .listId {
        font-weight: 400;
        opacity: 0.6;
      }

      .listTitle {
        font-weight: 500;
        opacity: 0.8;
      }
    }
  }

  .lightProjectListContainer {
    @include breakpoint-up(md) {
      border-top: 1px colors.$text-light solid;
      border-bottom: 1px colors.$text-light solid;
      opacity: 0.6;
      padding-block: fn.rem(15);
      gap: fn.rem(30);
    }
  }

  .darkProjectListContainer {
    @include breakpoint-up(md) {
      border-top: 1px colors.$text-dark solid;
      border-bottom: 1px colors.$text-dark solid;
      opacity: 0.6;
      padding-block: fn.rem(15);
      gap: fn.rem(30);
    }
  }
  .projectHeroSubContainer {
    @include flex_centered;
    margin-block-start: fn.rem(60);

    .projectHeroSub {
      @include flex_centered;
      @include flex_column;
      max-width: fn.rem(500);
      gap: fn.rem(10);

      .projectHeroSubtitle {
        max-width: fn.rem(450);
        font-family: 'Manrope';
        font-size: clamp(fn.rem(20), fn.rem(16) + 2vw, fn.rem(32));
        font-weight: 700;
        line-height: clamp(fn.rem(22), fn.rem(16) + 2vw, fn.rem(35));
        text-align: center;
      }

      .projectHeroSubDescription {
        font-size: clamp(fn.rem(12), fn.rem(10) + 1vw, fn.rem(16));
        font-weight: 500;
        line-height: clamp(fn.rem(16), fn.rem(16) + 1vw, fn.rem(24));
        text-align: center;
      }

      .arrowCon {
        @include flex_centered;
        width: fn.rem(43);
        height: fn.rem(43);
        border-radius: 50%;
        margin-block-start: fn.rem(40);
        animation: bounce 3s ease-in-out infinite;
      }

      .arrowLight {
        background-color: colors.$dark-bg;
        .arrow {
          color: colors.$light-bg;
        }
      }

      .arrowDark {
        background-color: colors.$light-bg;
        .arrow {
          color: colors.$dark-bg;
        }
      }

      .goto {
        font-family: 'Manrope';
        font-size: fn.rem(16);
        font-weight: 600;
        line-height: fn.rem(20);
        letter-spacing: 0.04em;
        padding-block: fn.rem(14);
        padding-inline: fn.rem(32);
        width: fit-content;
        border-radius: fn.rem(100);
        box-shadow: 0px 4px 8px 0px rgba(27, 26, 26, 0.36);
        margin-block-start: fn.rem(10);
        cursor: pointer;
      }

      .gotoLight {
        background: linear-gradient(
          180deg,
          rgba(183, 185, 187, 0.8) 0%,
          rgba(65, 67, 68, 0.4) 100%
        );
        color: rgba(7, 7, 7, 1);
      }

      .gotoDark {
        background: linear-gradient(
          180deg,
          rgba(62, 64, 66, 0.8) 0%,
          rgba(62, 64, 66, 0.4) 100%
        );
        color: rgba(252, 253, 255, 1);
      }
    }
  }
}

@keyframes bounce {
  0% {
    transform: translateY(15px);
  }
  25% {
    transform: translateY(12px);
  }
  50% {
    transform: translateY(15px);
  }
  75% {
    transform: translateY(0px);
  }
  100% {
    transform: translateY(15px);
  }
}
